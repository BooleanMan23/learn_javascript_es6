kasus 1

    var i = 10;
    console.log(i);

    keluaran  : 10

kasus 2

     i = 10;
    console.log(i);

    keluaran  : 10

kasus 3

    console.log(i);
    var i = 10;

    keluaran : undefined

    mengapa undefined?

    karena javascript hoisting,
    javascript mendeklarasikan variable dengan
    undefined sebelum menjalankan yang lainnya

    kode aslinya

    var i;
    console.log(i);
    i = 10;

kasus 4

    for(var i = 0; i<10 ; i++){
        console.log(i);
    }

    keluaran: 
    1
    2
    3
    4
    5
    6
    7
    8
    9

Kasus 5

    for(var i = 0; i<10 ; i++){
        console.log(i);
    }
    console.log(i);

    keluaran: 
    1
    2
    3
    4
    5
    6
    7
    8
    9
    10

    Mengapa javascript dapat mengakses variable i diluar 
    perulangan? dikarenakan javascript menerapkan 
    Function Spot

Kasus 6 
    function tes(){
        for(var i = 0; i<10; i++){
            console.log(i);
        }
    }
    tes();
    console.log(i);

    keluaran 
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    Error

Agar sebuah variable bekerja seperti block function pada javascrip
gunakan IIFE(Immediately Invoked Function Expression) 
atau SIAF(Self Invoking Anonymous Function)

Kasus 7
    (function(){
    for(var i = 0; i< 10; i++){
        console.log(i);
        }
    }());
    console.log(i);
    Keluaran
    0
    1
    2
    3
    4
    5
    6
    7
    8
    9
    Error

Dapat dipermudah dengan mengubah var -> let

Kasus 8

    for(let i =0; i<10; i++){
        console.log(i);
    }

    console.log(i);
    

